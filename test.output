
********************************************************
    Test1: testing createMatrix()    
********************************************************
    
	0 ?= 0

********************************************************
    Test2.1: testing initializeSparseRandomIntegerMatrix()    
********************************************************

matrix initialization called...
	adjMatrix on diagonal:0,0,0.

********************************************************
    Test2.2: testing initializeSparseRandomIntegerMatrix()    
********************************************************

	are some random elements symmetrical w.r.t. the diagonal?
	
i1	|	i2	|	failed	|	they are..
---------------------------------------------------------------
5	|	12	|	0	|	0 =? 0
14	|	11	|	0	|	7 =? 7
12	|	1	|	0	|	0 =? 0
0	|	11	|	0	|	0 =? 0
0	|	5	|	0	|	0 =? 0
1	|	13	|	0	|	0 =? 0
12	|	6	|	0	|	0 =? 0
8	|	2	|	0	|	0 =? 0
17	|	4	|	0	|	0 =? 0
17	|	8	|	0	|	0 =? 0
14	|	5	|	0	|	0 =? 0
10	|	16	|	0	|	0 =? 0
17	|	1	|	0	|	0 =? 0
0	|	3	|	0	|	0 =? 0
4	|	4	|	0	|	0 =? 0
13	|	1	|	0	|	0 =? 0
16	|	19	|	0	|	0 =? 0
12	|	1	|	0	|	0 =? 0
0	|	13	|	0	|	0 =? 0
12	|	1	|	0	|	0 =? 0

	Yeah. Test passed.

********************************************************
    Test3.1: testing representMatrix(), calling on adjMatrix     
********************************************************


printing matrix...(visualize on https://graphonline.ru/en/create_graph_by_matrix )
0 8 0 0 7 0 0 0 0 6 0 0 0 0 0 0 0 0 0 5 
8 0 0 0 0 0 0 0 0 0 4 0 0 0 0 2 9 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 
0 0 0 0 0 3 0 0 0 3 0 0 0 0 0 0 0 9 0 0 
7 0 0 0 0 0 0 0 0 6 0 0 0 2 0 0 0 0 0 0 
0 0 0 3 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 5 8 0 
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 
6 0 0 3 6 0 0 0 0 0 0 0 2 0 0 0 0 4 0 0 
0 4 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 2 0 
0 0 0 0 0 0 0 0 2 0 0 0 0 0 7 0 0 1 9 0 
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 2 1 0 0 0 0 0 0 0 0 5 0 0 0 0 1 
0 0 2 0 0 0 0 0 0 0 0 7 0 5 0 0 0 0 1 0 
0 2 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 8 0 
0 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 
0 0 0 9 0 0 0 5 0 4 0 1 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 9 8 0 0 2 9 0 0 1 8 4 0 0 0 
5 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 

********************************************************
    Test4.1: testing Dijkstra's implementation    
********************************************************
Vertex 	-> d.fr src 	 Path
0	->	0	
1	->	8	<1
2	->	13	<19<13<14<2
3	->	9	<9<3
4	->	7	<4
5	->	7	<19<13<5
6	->	21	<19<13<14<18<6
7	->	11	<1<15<7
8	->	13	<9<17<11<8
9	->	6	<9
10	->	12	<1<10
11	->	11	<9<17<11
12	->	8	<9<12
13	->	6	<19<13
14	->	11	<19<13<14
15	->	10	<1<15
16	->	16	<19<13<14<18<16
17	->	10	<9<17
18	->	12	<19<13<14<18
19	->	5	<19
